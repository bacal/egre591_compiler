ToyCProgram -> { Definition } EOF

Definition -> Type identifier ( FunctionDefinition | ; )

Type -> int | char

FunctionDefinition -> FunctionHeader FunctionBody
FunctionHeader -> ( [ FormalParamList ] )
FunctionBody -> CompoundStatement
FormalParamList -> Type identifier { , Type identifier }

Statement -> ExpressionStatement
             | BreakStatement
             | CompoundStatement
             | IfStatement
             | NullStatement
             | ReturnStatement
             | WhileStatement
             | ReadStatement
             | WriteStatement
             | NewLineStatement

ExpressionStatement -> Expression ;

BreakStatement -> break ;

CompoundStatement -> { { Type identifier ; } { Statement } }

IfStatement -> if ( Expression ) Statement [ else Statement ]

NullStatement -> ;

ReturnStatement -> return [ Expression ] ;

WhileStatement -> while ( Expression ) Statement

ReadStatement -> read ( identifier { , identifier } ) ;

WriteStatement -> write ( ActualParameters ) ;

NewLineStatement -> newline ;

Expression -> RelopExpression { assignop RelopExpression }

RelopExpression -> SimpleExpression { relop SimpleExpression }

SimpleExpression -> Term { addop Term }

Term -> Primary { mulop Primary }

Primary -> identifier [ FunctionCall ]
           | number
           | stringConstant
           | charConstant
           | ( Expression )
           | ( âˆ’ | not ) Primary

FunctionCall -> ( [ ActualParameters ] )

ActualParameters -> Expression { , Expression }